// Mocks generated by Mockito 5.3.2 from annotations
// in online_order_app/test/helper/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:online_order_app/data/datasources/local/store_local_datasource.dart'
    as _i10;
import 'package:online_order_app/data/datasources/remote/store_remote_datasource.dart'
    as _i9;
import 'package:online_order_app/data/models/cart_list_response.dart' as _i5;
import 'package:online_order_app/data/models/cart_model.dart' as _i4;
import 'package:online_order_app/data/models/cart_table.dart' as _i11;
import 'package:online_order_app/data/models/product_list_item_response.dart'
    as _i3;
import 'package:online_order_app/data/models/product_model.dart' as _i6;
import 'package:online_order_app/domain/repositories/store_repository.dart'
    as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProductListItemResponse_1 extends _i1.SmartFake
    implements _i3.ProductListItemResponse {
  _FakeProductListItemResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCartModel_2 extends _i1.SmartFake implements _i4.CartModel {
  _FakeCartModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCartListResponse_3 extends _i1.SmartFake
    implements _i5.CartListResponse {
  _FakeCartListResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProductModel_4 extends _i1.SmartFake implements _i6.ProductModel {
  _FakeProductModel_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [StoreRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockStoreRepository extends _i1.Mock implements _i7.StoreRepository {
  MockStoreRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<
      _i2
          .Either<String, _i3.ProductListItemResponse>> getAllProducts() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllProducts,
          [],
        ),
        returnValue:
            _i8.Future<_i2.Either<String, _i3.ProductListItemResponse>>.value(
                _FakeEither_0<String, _i3.ProductListItemResponse>(
          this,
          Invocation.method(
            #getAllProducts,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Either<String, _i3.ProductListItemResponse>>);
  @override
  _i8.Future<_i2.Either<String, _i6.ProductModel>> getProductById(
          String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductById,
          [productId],
        ),
        returnValue: _i8.Future<_i2.Either<String, _i6.ProductModel>>.value(
            _FakeEither_0<String, _i6.ProductModel>(
          this,
          Invocation.method(
            #getProductById,
            [productId],
          ),
        )),
      ) as _i8.Future<_i2.Either<String, _i6.ProductModel>>);
  @override
  _i8.Future<_i2.Either<String, _i5.CartListResponse>> getAllCarts() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllCarts,
          [],
        ),
        returnValue: _i8.Future<_i2.Either<String, _i5.CartListResponse>>.value(
            _FakeEither_0<String, _i5.CartListResponse>(
          this,
          Invocation.method(
            #getAllCarts,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Either<String, _i5.CartListResponse>>);
  @override
  _i8.Future<_i2.Either<String, List<_i4.CartModel>>> getAllSavedCart() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSavedCart,
          [],
        ),
        returnValue: _i8.Future<_i2.Either<String, List<_i4.CartModel>>>.value(
            _FakeEither_0<String, List<_i4.CartModel>>(
          this,
          Invocation.method(
            #getAllSavedCart,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Either<String, List<_i4.CartModel>>>);
  @override
  _i8.Future<_i2.Either<String, _i4.CartModel?>> getCartById(String? cartId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCartById,
          [cartId],
        ),
        returnValue: _i8.Future<_i2.Either<String, _i4.CartModel?>>.value(
            _FakeEither_0<String, _i4.CartModel?>(
          this,
          Invocation.method(
            #getCartById,
            [cartId],
          ),
        )),
      ) as _i8.Future<_i2.Either<String, _i4.CartModel?>>);
  @override
  _i8.Future<_i2.Either<String, _i4.CartModel>> getSavedCartById(int? cartId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSavedCartById,
          [cartId],
        ),
        returnValue: _i8.Future<_i2.Either<String, _i4.CartModel>>.value(
            _FakeEither_0<String, _i4.CartModel>(
          this,
          Invocation.method(
            #getSavedCartById,
            [cartId],
          ),
        )),
      ) as _i8.Future<_i2.Either<String, _i4.CartModel>>);
  @override
  _i8.Future<_i2.Either<String, _i4.CartModel>> addCart(_i4.CartModel? cart) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCart,
          [cart],
        ),
        returnValue: _i8.Future<_i2.Either<String, _i4.CartModel>>.value(
            _FakeEither_0<String, _i4.CartModel>(
          this,
          Invocation.method(
            #addCart,
            [cart],
          ),
        )),
      ) as _i8.Future<_i2.Either<String, _i4.CartModel>>);
  @override
  _i8.Future<_i2.Either<String, _i4.CartModel>> updateCart(
          _i4.CartModel? cart) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCart,
          [cart],
        ),
        returnValue: _i8.Future<_i2.Either<String, _i4.CartModel>>.value(
            _FakeEither_0<String, _i4.CartModel>(
          this,
          Invocation.method(
            #updateCart,
            [cart],
          ),
        )),
      ) as _i8.Future<_i2.Either<String, _i4.CartModel>>);
  @override
  _i8.Future<_i2.Either<String, void>> updateSavedCart(_i4.CartModel? cart) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSavedCart,
          [cart],
        ),
        returnValue: _i8.Future<_i2.Either<String, void>>.value(
            _FakeEither_0<String, void>(
          this,
          Invocation.method(
            #updateSavedCart,
            [cart],
          ),
        )),
      ) as _i8.Future<_i2.Either<String, void>>);
  @override
  _i8.Future<_i2.Either<String, void>> saveCart(_i4.CartModel? cart) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCart,
          [cart],
        ),
        returnValue: _i8.Future<_i2.Either<String, void>>.value(
            _FakeEither_0<String, void>(
          this,
          Invocation.method(
            #saveCart,
            [cart],
          ),
        )),
      ) as _i8.Future<_i2.Either<String, void>>);
  @override
  _i8.Future<_i2.Either<String, void>> deleteCart(_i4.CartModel? cart) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteCart,
          [cart],
        ),
        returnValue: _i8.Future<_i2.Either<String, void>>.value(
            _FakeEither_0<String, void>(
          this,
          Invocation.method(
            #deleteCart,
            [cart],
          ),
        )),
      ) as _i8.Future<_i2.Either<String, void>>);
}

/// A class which mocks [StoreRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockStoreRemoteDatasource extends _i1.Mock
    implements _i9.StoreRemoteDatasource {
  MockStoreRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i3.ProductListItemResponse> getAllProducts() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllProducts,
          [],
        ),
        returnValue: _i8.Future<_i3.ProductListItemResponse>.value(
            _FakeProductListItemResponse_1(
          this,
          Invocation.method(
            #getAllProducts,
            [],
          ),
        )),
      ) as _i8.Future<_i3.ProductListItemResponse>);
  @override
  _i8.Future<_i4.CartModel> updateCart(_i4.CartModel? cart) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCart,
          [cart],
        ),
        returnValue: _i8.Future<_i4.CartModel>.value(_FakeCartModel_2(
          this,
          Invocation.method(
            #updateCart,
            [cart],
          ),
        )),
      ) as _i8.Future<_i4.CartModel>);
  @override
  _i8.Future<_i4.CartModel> addCart(_i4.CartModel? cart) => (super.noSuchMethod(
        Invocation.method(
          #addCart,
          [cart],
        ),
        returnValue: _i8.Future<_i4.CartModel>.value(_FakeCartModel_2(
          this,
          Invocation.method(
            #addCart,
            [cart],
          ),
        )),
      ) as _i8.Future<_i4.CartModel>);
  @override
  _i8.Future<_i4.CartModel?> getCartById(String? cartId) => (super.noSuchMethod(
        Invocation.method(
          #getCartById,
          [cartId],
        ),
        returnValue: _i8.Future<_i4.CartModel?>.value(),
      ) as _i8.Future<_i4.CartModel?>);
  @override
  _i8.Future<_i5.CartListResponse> getAllCarts() => (super.noSuchMethod(
        Invocation.method(
          #getAllCarts,
          [],
        ),
        returnValue:
            _i8.Future<_i5.CartListResponse>.value(_FakeCartListResponse_3(
          this,
          Invocation.method(
            #getAllCarts,
            [],
          ),
        )),
      ) as _i8.Future<_i5.CartListResponse>);
  @override
  _i8.Future<_i6.ProductModel> getProductById(String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductById,
          [productId],
        ),
        returnValue: _i8.Future<_i6.ProductModel>.value(_FakeProductModel_4(
          this,
          Invocation.method(
            #getProductById,
            [productId],
          ),
        )),
      ) as _i8.Future<_i6.ProductModel>);
}

/// A class which mocks [StoreLocalDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockStoreLocalDatasource extends _i1.Mock
    implements _i10.StoreLocalDatasource {
  MockStoreLocalDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<void> deleteCart(_i11.CartTable? cart) => (super.noSuchMethod(
        Invocation.method(
          #deleteCart,
          [cart],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> saveCart(_i11.CartTable? cart) => (super.noSuchMethod(
        Invocation.method(
          #saveCart,
          [cart],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> updateSavedCart(_i11.CartTable? cart) => (super.noSuchMethod(
        Invocation.method(
          #updateSavedCart,
          [cart],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<_i11.CartTable?> getSavedCartById(int? cartId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSavedCartById,
          [cartId],
        ),
        returnValue: _i8.Future<_i11.CartTable?>.value(),
      ) as _i8.Future<_i11.CartTable?>);
  @override
  _i8.Future<List<_i11.CartTable>> getAllSavedCart() => (super.noSuchMethod(
        Invocation.method(
          #getAllSavedCart,
          [],
        ),
        returnValue: _i8.Future<List<_i11.CartTable>>.value(<_i11.CartTable>[]),
      ) as _i8.Future<List<_i11.CartTable>>);
}
